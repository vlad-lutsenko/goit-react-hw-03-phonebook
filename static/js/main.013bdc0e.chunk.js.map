{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.js","components/ContactForm/ContactForm .js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList .js","components/Filter/Filter.js","helpers/localStorageHelper.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","state","name","number","changeHandler","e","target","value","setState","submitHandler","preventDefault","contact","id","uuidv4","props","addContact","reset","this","onSubmit","contactForm","htmlFor","type","placeholder","onChange","disabled","length","Component","ContactListItem","onDelete","contactLi","contactLiP","onClick","contactLiBtn","ContactList","contacts","map","key","style","display","Filter","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","App","filter","deleteContactbyId","updatedContacts","newName","toLowerCase","includes","trim","toast","configure","error","position","POSITION","TOP_CENTER","autoClose","delay","transition","Zoom","filterContactsByName","helper","prevProps","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.013bdc0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLi\":\"ContactListItem_contactLi__1ftzr\",\"contactLiP\":\"ContactListItem_contactLiP__3ll8N\",\"contactLiBtn\":\"ContactListItem_contactLiBtn__32Cca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ow-57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3c4qw\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.submitHandler} className={styles.contactForm}>\r\n        <label htmlFor=\"nameInput\">\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.changeHandler}\r\n            id=\"nameInput\"\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\">\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.changeHandler}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.contactLi}>\r\n      <p className={styles.contactLiP}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete} className={styles.contactLiBtn}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.length ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>no contact with such name in your phone </p>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst style = {\r\n  display: \"block\",\r\n};\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <label htmlFor=\"filterInput\">\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        style={style}\r\n        id=\"filterInput\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nconst get = (key) => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nexport default {\r\n  save,\r\n  get,\r\n};\r\n","import React, { Component } from \"react\";\nimport Section from \"./Section/Section\";\nimport ContactForm from \"./ContactForm/ContactForm \";\nimport ContactList from \"./ContactList/ContactList \";\nimport Filter from \"./Filter/Filter\";\nimport helper from \"../helpers/localStorageHelper\";\n\nimport { toast, Zoom } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteContactbyId = (id) => {\n    const { contacts } = this.state;\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  addContact = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      toast.configure();\n      toast.error(`${newName} is already in contact list`, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 6000,\n        delay: 200,\n        transition: Zoom,\n      });\n    } else {\n      this.setState((state) => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  filterContactsByName = () => {\n    const { contacts, filter } = this.state;\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  componentDidMount() {\n    if (helper.get(\"contacts\")) {\n      this.setState({\n        contacts: [...helper.get(\"contacts\")],\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      helper.save(\"contacts\", this.state.contacts);\n    }\n  }\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm addContact={this.addContact} />\n        </Section>\n        {!!contacts.length && (\n          <Section title=\"Contacts\">\n            {contacts.length > 1 && <Filter onChange={this.changeHandler} />}\n\n            <ContactList\n              contacts={this.filterContactsByName()}\n              onDelete={this.deleteContactbyId}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}